name: CI

on:
  push:
    branches:
      - master
      - validate/*
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-18.04
        - macos-latest
        - windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v1
      with:
        path: .yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-
    - uses: aarnott/nbgv@v0.3
      id: nbgv
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
        registry-url: https://npm.pkg.github.com
    - run: yarn
    - name: Build
      run: ./build_all.ps1
      shell: pwsh
    - name: Test
      run: ./test_all.ps1
      shell: pwsh

    - name: Stamping NPM versions
      run: .github/workflows/set_version.ps1 -Version ${{ steps.nbgv.outputs.NpmPackageVersion }}
      shell: pwsh
      if: runner.os == 'Linux'
    - name: Pack
      run: ./pack_all.ps1
      shell: pwsh
      if: runner.os == 'Linux'
    - name: Collect NPM package artifacts
      uses: actions/upload-artifact@v1
      with:
        name: NPM packages
        path: out
      if: runner.os == 'Linux'
  publish:
    needs: build
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Ideally conditioned on: github.ref == format('refs/tags/v{0}', steps.nbgv.outputs.SemVer2)
    steps:
    - name: Download NPM package tgz files
      uses: actions/download-artifact@v1
      with:
        name: NPM packages
    - name: Prepare to publish to npmjs.org
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
        registry-url: https://registry.npmjs.org
    - name: Publish NPM packages to npmjs.org
      run: |
        Get-ChildItem *.tgz |% {
          npm publish $_
          if ($LASTEXITCODE -ne 0) {
            exit $LASTEXITCODE
          }
        }
      shell: pwsh
      working-directory: NPM packages
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
